from itertools import groupby

class Map:
    map_def = "--------------------------------------------------------------------------------" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-...............########.......................................................-" + "\n" + \
              "-...............#......#.......................................................-" + "\n" + \
              "-...............#......#.......................................................-" + "\n" + \
              "-...............#......#.....................#.................................-" + "\n" + \
              "-...............#......#....................#.#................................-" + "\n" + \
              "-...............###.####...................#...#...............................-" + "\n" + \
              "-.........................................#.....#..............................-" + "\n" + \
              "-........................................#.......#.............................-" + "\n" + \
              "-.......................................#.........#............................-" + "\n" + \
              "-......................................#...........#...........................-" + "\n" + \
              "-.....................................###############..........................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "-..............................................................................-" + "\n" + \
              "--------------------------------------------------------------------------------"

    def __init__(self):
        self.map_lines = self.map_def.split('\n')

    def is_passable(self, x, y):
        if len(self.map_lines) <= y:
            return False
        if len(self.map_lines[y]) <= x:
            return False
        map_char = self.map_lines[y][x]
        if map_char in ('-', '#'):
            return False

        return True

    def draw(self, cons):
        for i in range(0, len(self.map_lines)):
            cons.draw_str_at(0, i, self.map_lines[i])

    def get_runs(self):
        runs = []
        for y in range(0, len(self.map_lines)):
            line = self.map_lines[y]
            x = 0
            for ch, group in groupby(line, None):
                tile = 'floor' if ch == '.' else 'wall'
                length = len(list(group))
                runs.append(Run(ch, length, tile, x, y))
                x += length
        return runs

    def get_attrs(self, x, y):
        if self.map_lines[y][x] in ['#', '-']:
            return {'passable': False}
        else:
            return {'passable': True}

class Run:
    def __init__(self, char, count, tile, x, y):
        self.char = char
        self.length = count
        self.tile_code = tile
        self.x = x
        self.y = y
